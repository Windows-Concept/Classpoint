name: Build and Release ClassPoint

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build React app
        run: npm run build
        
      - name: Build Electron app (Windows)
        if: matrix.os == 'windows-latest'
        run: npx electron-builder --win --publish=never
        
      - name: Build Electron app (macOS)
        if: matrix.os == 'macos-latest'
        run: npx electron-builder --mac --publish=never
        
      - name: Build Electron app (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: npx electron-builder --linux --publish=never
        
      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ClassPoint-Windows
          path: dist/*.exe
          
      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ClassPoint-macOS
          path: dist/*.dmg
          
      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ClassPoint-Linux
          path: dist/*.AppImage

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ClassPoint-Windows/*
            ClassPoint-macOS/*
            ClassPoint-Linux/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}